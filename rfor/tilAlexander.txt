library(ranger)
library(hmeasure)

adultTrain = read.table("M://BigInsight//Projects//Explanations//Annabelle//counterfactuals//Datasets/adult_income.csv",sep=",",header=FALSE)
adultTest = read.table("M://BigInsight//Projects//Explanations//Annabelle//counterfactuals//Datasets/adult_income_test2.csv",sep=",",header=FALSE)

varNames <- c("age", "workclass",  "fnlwgt", "education", "education-num", "marital-status", "occupation", "relationship", "race", "sex", "capital-gain", "capital-loss", "hours-per-week", "native-country", "income")    

#Response
response <- array(0,dim(adultTrain)[1])
response[which(as.character(adultTrain[,15])==" >50K")] <- 1
adultTrain[,15] <- as.factor(response)

truePred <- array(0,dim(adultTest)[1])
truePred[which(as.character(adultTest[,15])==" >50K.")] <- 1

factor_var = c("workclass",  "marital-status", "occupation", "relationship", "race", "sex", "native-country")
num_var = c("age", "fnlwgt", "education-num", "capital-gain", "capital-loss", "hours-per-week", "income")

ind <- match(factor_var,varNames)

for(i in ind)
adultTrain[,i] <- as.factor(adultTrain[,i])

for(i in ind)
adultTest[,i] <- as.factor(adultTest[,i])


model <- ranger(adultTrain[,15] ~ ., data = adultTrain[,-c(4,15)], num.trees = 500, num.threads = 6,
						verbose = TRUE,
						probability = TRUE,
						importance = "impurity",
						mtry = sqrt(13))
pred.rf <- predict(model, data = adultTest[,-c(4,15)])
results <- HMeasure(truePred,pred.rf$predictions[,2],threshold=0.15)
results$metrics$AUC